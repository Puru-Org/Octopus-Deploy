name: Run PowerShell Script
on:
  # push:
  #   branches: 
  #     - main
  workflow_call:
    inputs: 
      source_data: 
        type: string
        required: true
        description: 'Octopus VariableSet Name'
      dest_json:
        type: string
        required: true
        #default: ""
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Run python script to extract global variables to project vars
      shell: python
      run: |
        #import json
        import requests
        
        def extract_and_add_variable(source_json, dest_json, variable_names):
            # with open(source_json, 'r') as f:
            #     source_data = json.load(f)
            source_data = requests.get(source_json).json()
        
            with open(dest_json, 'r') as f:
                dest_data = json.load(f)
        
            for variable_name in variable_names:
                existing_variables = [variable["Name"] for variable in dest_data["Variables"]]
                if variable_name in existing_variables:
                    print(f"Variable '{variable_name}' already exists in the destination JSON file.")
                else:
                    print("Adding the Variable property block to the destination JSON file")
                    extracted_data = []
                    for variable in source_data["Variables"]:
                        if variable.get("Name") == variable_name:
                            extracted_data.append(variable)
        
                    dest_data["Variables"].extend(extracted_data)
        
            with open(dest_json, 'w') as f:
                json.dump(dest_data, f, indent=2)
        
        # Read source data from file
        with open("${{ inputs.source_data }}", 'r') as f:
            source_data = json.load(f)
        
        # Process each source data entry
        for data_entry in source_data:
            source_json = data_entry["source_json"]
            variable_names = data_entry["variable_names"]
            dest_json = "${{ inputs.dest_json }}"  # Assuming same destination JSON file for all sources
        
            # Call function to extract and add variables to destination JSON
            if data_entry.get("copy_all"):
                with open(source_json, 'r') as f:
                    all_variables = json.load(f)["Variables"]
                variable_names.extend(variable["Name"] for variable in all_variables)
        
            extract_and_add_variable(source_json.strip(), dest_json, variable_names)
      

    # - name: Run Pyhton script to pull out the global variables
    #   shell: python
    #   run: |
    #     import json
    #     import requests
    #     def extract_and_add_variable(source_json, dest_json, variable_names):
    #         # with open(source_json, 'r') as f:
    #         #     source_data = json.load(f)
    #         source_data = requests.get(source_json).json()

    #         with open(dest_json, 'r') as f:
    #             dest_data = json.load(f)

    #         for variable_name in variable_names:
    #             existing_variables = [variable["Name"] for variable in dest_data["Variables"]]
    #             if variable_name in existing_variables:
    #                 print(f"Variable '{variable_name}' already exists in the destination '{dest_json}' file.")
    #             else:
    #                 print(f"Adding the '{variable_name}' property block to the destination '{dest_json}' file")
    #                 extracted_data = []
    #                 for variable in source_data["Variables"]:
    #                     if variable.get("Name") == variable_name:
    #                         extracted_data.append(variable)

    #                 dest_data["Variables"].extend(extracted_data)

    #         with open(dest_json, 'w') as f:
    #             json.dump(dest_data, f, indent=2)

    #     # Read source data from file
    #     with open("${{ inputs.source_data }}", 'r') as f:
    #         lines = f.readlines()

    #     # Process each line in source data
    #     for line in lines:
    #         line = line.strip()
    #         if line:  # Skip empty lines
    #             source_json, *variable_names = line.split(",")
    #             dest_json = "${{ inputs.dest_json }}"  # Assuming same destination JSON file for all sources

    #             # Call function to extract and add variables to destination JSON
    #             extract_and_add_variable(source_json, dest_json, variable_names)
    - name: Clear Workspace
      if: always()
      run: |
        ls -la ./
        rm -rf $GITHUB_WORKSPACE/*
